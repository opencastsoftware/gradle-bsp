[versions]
bsp4j = "2.1.1"
equalsVerifier = "3.17.5"
graalVmNativeImagePlugin = "0.10.1"
gradleBuildInfo = "0.3.1"
gradleJavaConventions = "0.1.4"
gradleToolingApi = "8.6"
hamcrest = "2.2"
jacoco = "0.8.8"
jsonJava = "20240303"
junit = "5.11.3"
junixSocket = "2.10.1"
logback = "1.5.16"
picocli = "4.7.6"
slf4j = "2.0.16"
toStringVerifier = "1.4.8"

[libraries]
bsp4j = { module = "ch.epfl.scala:bsp4j", version.ref = "bsp4j" }
equalsVerifier = { module = "nl.jqno.equalsverifier:equalsverifier", version.ref = "equalsVerifier" }
gradleToolingApi = { module = "org.gradle:gradle-tooling-api", version.ref = "gradleToolingApi" }
hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest" }
jsonJava = { module = "org.json:json", version.ref = "jsonJava" }
julToSlf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
junitJupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junixSocket = { module = "com.kohlschutter.junixsocket:junixsocket-core", version.ref = "junixSocket" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
picocli = { module = "info.picocli:picocli", version.ref = "picocli" }
picocliCodegen = { module = "info.picocli:picocli-codegen", version.ref = "picocli" }
slf4jApi = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
toStringVerifier = { module = "com.jparams:to-string-verifier", version.ref = "toStringVerifier" }

[bundles]
slf4j = ["slf4jApi", "julToSlf4j"]

[plugins]
gradleBuildInfo = { id = "com.opencastsoftware.gradle.buildinfo", version.ref = "gradleBuildInfo" }
gradleJavaConventions = { id = "com.opencastsoftware.gradle.java-conventions", version.ref = "gradleJavaConventions" }
graalVmNativeImage = { id = "org.graalvm.buildtools.native", version.ref = "graalVmNativeImagePlugin" }
